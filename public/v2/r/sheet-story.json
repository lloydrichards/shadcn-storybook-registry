{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sheet-story",
  "type": "registry:ui",
  "title": "Sheet Story",
  "registryDependencies": [
    "sheet"
  ],
  "files": [
    {
      "path": "registry/sheet.stories.tsx",
      "content": "// Replace nextjs-vite with the name of your framework\nimport type { Meta, StoryObj } from \"@storybook/nextjs-vite\";\n\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { expect, userEvent, within } from \"storybook/test\";\n\n/**\n * Extends the Dialog component to display content that complements the main\n * content of the screen.\n */\nconst meta: Meta<typeof SheetContent> = {\n  title: \"ui/Sheet\",\n  component: Sheet,\n  tags: [\"autodocs\"],\n  argTypes: {\n    side: {\n      options: [\"top\", \"bottom\", \"left\", \"right\"],\n      control: {\n        type: \"radio\",\n      },\n    },\n  },\n  args: {\n    side: \"right\",\n  },\n  render: (args) => (\n    <Sheet>\n      <SheetTrigger>Open</SheetTrigger>\n      <SheetContent {...args}>\n        <SheetHeader>\n          <SheetTitle>Are you absolutely sure?</SheetTitle>\n          <SheetDescription>\n            This action cannot be undone. This will permanently delete your\n            account and remove your data from our servers.\n          </SheetDescription>\n        </SheetHeader>\n        <SheetFooter>\n          <SheetClose className=\"hover:underline\">Cancel</SheetClose>\n          <SheetClose className=\"bg-primary text-primary-foreground rounded px-4 py-2\">\n            Submit\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  ),\n  parameters: {\n    layout: \"centered\",\n  },\n} satisfies Meta<typeof SheetContent>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\n/**\n * The default form of the sheet.\n */\nexport const Default: Story = {};\n\nexport const ShouldOpenCloseSubmit: Story = {\n  name: \"when clicking Submit button, should close the sheet\",\n  tags: [\"!dev\", \"!autodocs\"],\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement.ownerDocument.body);\n\n    // Open the dialog\n    await userEvent.click(await canvas.findByRole(\"button\", { name: \"Open\" }));\n\n    const sheet = await canvas.findByRole(\"dialog\");\n    expect(sheet).toBeInTheDocument();\n    expect(sheet).toHaveAttribute(\"data-state\", \"open\");\n\n    // Close the dialog\n    await userEvent.click(\n      await canvas.findByRole(\"button\", { name: \"Submit\" }),\n      { delay: 100 },\n    );\n    expect(sheet).toHaveAttribute(\"data-state\", \"closed\");\n  },\n};\n\nexport const ShouldOpenCloseCancel: Story = {\n  name: \"when clicking Cancel button, should close the sheet\",\n  tags: [\"!dev\", \"!autodocs\"],\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement.ownerDocument.body);\n\n    // Open the dialog\n    await userEvent.click(await canvas.findByRole(\"button\", { name: \"Open\" }));\n\n    const sheet = await canvas.findByRole(\"dialog\");\n    expect(sheet).toBeInTheDocument();\n    expect(sheet).toHaveAttribute(\"data-state\", \"open\");\n\n    // Close the dialog\n    await userEvent.click(\n      await canvas.findByRole(\"button\", { name: \"Cancel\" }),\n      { delay: 100 },\n    );\n    expect(sheet).toHaveAttribute(\"data-state\", \"closed\");\n  },\n};\n\nexport const ShouldOpenCloseCross: Story = {\n  name: \"when clicking Close icon, should close the sheet\",\n  tags: [\"!dev\", \"!autodocs\"],\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement.ownerDocument.body);\n\n    // Open the sheet\n    await userEvent.click(await canvas.findByRole(\"button\", { name: \"Open\" }));\n\n    const sheet = await canvas.findByRole(\"dialog\");\n    expect(sheet).toBeInTheDocument();\n    expect(sheet).toHaveAttribute(\"data-state\", \"open\");\n\n    // Close the sheet\n    await userEvent.click(await canvas.findByRole(\"button\", { name: \"Close\" }));\n    expect(sheet).toHaveAttribute(\"data-state\", \"closed\");\n  },\n};\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "story": "ui-sheet"
  }
}